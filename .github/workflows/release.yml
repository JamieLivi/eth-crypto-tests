name: release
on:
  push:
    # branches:
    #   - main

permissions:
  contents: read

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: yarn install

      - name: Run linter
        run: npm run lint

  audit-ci:
    name: audit-ci
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: yarn install

      - name: Run Audit-CI to check for vulnerabilities
        run: npm run audit-ci

  tests:
    name: tests
    runs-on: ubuntu-latest
    needs: [audit-ci]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: yarn install

      - name: Run tests
        run: npm run test

      - name: Generate coverage report
        run: |
          npm install codeclimate-test-reporter
          ./node_modules/.bin/codeclimate-test-reporter <your-command-to-generate-coverage>

      - name: Report to CodeClimate
        env:
          CODECLIMATE_REPO_TOKEN: ${{ secrets.CODECLIMATE_REPO_TOKEN }}
        run: ./node_modules/.bin/codeclimate-test-reporter after-build --exit-code $?

  release:
    name: release
    runs-on: ubuntu-latest
    needs: [tests]
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Configure npm
        run: npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

      - name: Build and Release
        run: npm run release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
